#!/bin/bash
# Gestion du ventilateur RapsberryPi en fonction de la température
configPath="/usr/local/lib"
source /usr/lib/shell-text.cnf
source ${configPath}/fancontrol.cnf
# cut floating point
TEMP_V1=${TEMP_V1#*.}
TEMP_V2=${TEMP_V2#*.}
TEMP_V3=${TEMP_V3#*.}
TEMP_ALARM=${TEMP_ALARM#*.}
HYST=${HYST#*.}
DEBUG=0

while [ "$#" -gt 0 ]; do
    case "$1" in
	"--help"|"-h")
		# HELP
		echo "${bold}Script de gestion du ventilateur sur RaspberryPi${normal}"
		echo "Fichier de configuration : ${configPath}/fancontrol.cnf"
		echo "Utilisation : fancontrol [OPTION]"
		echo
		echo "	${bold}--help|-h	:${normal} Afficher la présente aide"
		echo "	${bold}--debug|-d	:${normal} Mode de debuggage"
		echo "	${bold}--stop|-s	:${normal} Arrêter le ventilateur et le suivi de température CPU"
		echo "	${bold}--start|-S	:${normal} (comportement par défaut) Démarrer le suivi de température CPU et le ventilateur si nécessaire"
		echo "	${bold}--restart|-r|-R	=${normal} Arrêter le ventilateur et redémarrer le service"
		echo

		exit 0
		;;

	"-debug"|"-d")
		DEBUG=1
		;;

	"--stop"|"-s")
		# STOP FAN AND TEMP CONTROL
		gpio -g pwm $FAN_PIN 0
		gpio -g mode $FAN_PIN OUT
		gpio -g write $FAN_PIN 0

		exit 0
		;;

	"--restart"|"-r"|"-R")
		# RESTART FAN CONTROL
		gpio -g pwm $FAN_PIN 0
		# continue to start
		;;

	"--start"|"-S")
		# START FAN CONTROL (go to end of script)
		if [ $FAN_MODE -gt 0 ]; then
			echo "Démarrage du ventilateur à $((100*$PWM_V1/1024))% pour $TEMP_V1°C"
			echo "Deuxième vitesse à $((100*$PWM_V2/1024))% pour $TEMP_V2°C"
			echo "Troisième vitesse à $((100*$PWM_V3/1024))% pour $TEMP_V3°C"
		else echo "Démarrage du ventilateur à $TEMP_V2°C"
		fi
		echo "Alarme à $TEMP_ALARM°C"
		echo "Hystérésis de +/- $HYST°C"
		echo ""
		;;

	*)
		echo "Commande $1 inconnue, tapez -h pour obtenir de l'aide"
		exit 0
		;;
    esac
    shift
done

set_fan ()
{
	if [ ! $# -eq 1 ]; then
		return 127
	fi
	newState=$1
	case $newState in
		0)
			if [ $FAN_MODE -gt 0 ]; then
				gpio -g pwm $FAN_PIN 0
			else gpio -g write $FAN_PIN 0
			fi
			timer=60
			;;
		1)
			if [ $FAN_MODE -gt 0 ]; then
				gpio -g pwm $FAN_PIN $PWM_V1
			else gpio -g write $FAN_PIN 0
			fi
			timer=30
			;;
		2)
			if [ $FAN_MODE -gt 0 ]; then
				gpio -g pwm $FAN_PIN $PWM_V2
			else gpio -g write $FAN_PIN 1
			fi
			timer=10
			;;
		3|4)
			if [ $FAN_MODE -gt 0 ]; then
				gpio -g pwm $FAN_PIN $PWM_V3
			else gpio -g write $FAN_PIN 1
			fi
			if [ newState -eq 4 ] && [ $ALARM_PIN -gt 0 ]; then
				# activer l'alarme
				gpio -g write $ALARM_PIN 1
				sleep 0.5
				gpio -g write $ALARM_PIN 0
				timer=1
			else
				timer=5
			fi
			;;
		*)
			return 127
			;;
	esac

	state=$newState
	if [ $FAN_MODE -gt 0 ] && [ $state -gt 0 ]; then
		echo "Ventilateur à la vitesse $state"
	elif [ $FAN_MODE -eq 0 ] && [ $state -gt 1 ]; then
		echo "Allumage du ventilateur"
	else echo "Extinction du ventilateur"
	fi
	return 0
}

if [ $DEBUG -gt 0 ]; then
	echo "Initialisation du ventilateur à la pin $FAN_PIN"
	echo "Vitesse nulle"
fi
state=0
timer=60
gpio -g mode $FAN_PIN out
gpio -g write $FAN_PIN 0
if [ $ALARM_PIN -gt 0 ]; then
	gpio -g $ALARM_PIN out
	gpio -g write $ALARM_PIN 0
fi
if [ $FAN_MODE -gt 0 ]; then
	# First wait a minute for PWM clock
	sleep $timer
	gpio -g mode $FAN_PIN pwm
	gpio -g pwm $FAN_PIN 0
fi

while [ 1 ]; do
	temp=$(($(</sys/class/thermal/thermal_zone0/temp)/1000))
	if [ $DEBUG -gt 0 ]; then
		echo "Température actuelle : ${temp}°C"
		echo "Actuellement sur la vitesse $state"
	fi

	minusTemp=$(($temp-$HYST))
	majorTemp=$(($temp+$HYST))
	case $state in
		0)
			if [ $minusTemp -lt $TEMP_V1 ]; then
				if [ $DEBUG -gt 0 ]; then echo "Pas de changement"; fi
			elif [ $minusTemp -lt $TEMP_V2 ]; then
				set_fan 1
			elif [ $minusTemp -lt $TEMP_V3 ]; then
				set_fan 2
			elif [ $minusTemp -lt $TEMP_ALARM ]; then
				set_fan 3
			else set_fan 4
			fi
			;;
			
		1)
			if [ $majorTemp -lt $TEMP_V1 ]; then
				set_fan 0
			elif [ $minusTemp -lt $TEMP_V2 ]; then
				if [ $DEBUG -gt 0 ]; then echo "Pas de changement"; fi
			elif [ $minusTemp -lt $TEMP_V3 ]; then
				set_fan 2
			elif [ $minusTemp -lt $TEMP_ALARM ]; then
				set_fan 3
			else set_fan 4
			fi
			;;
			
		2)
			if [ $majorTemp -lt $TEMP_V1 ]; then
				set_fan 0
			elif [ $majorTemp -lt $TEMP_V2 ]; then
				set_fan 1
			elif [ $minusTemp -lt $TEMP_V3 ]; then
				if [ $DEBUG -gt 0 ]; then echo "Pas de changement"; fi
			elif [ $minusTemp -lt $TEMP_ALARM ]; then
				set_fan 3
			else set_fan 4
			fi
			;;

		3)
			if [ $majorTemp -lt $TEMP_V1 ]; then
				set_fan 0
			elif [ $majorTemp -lt $TEMP_V2 ]; then
				set_fan 1
			elif [ $majorTemp -lt $TEMP_V3 ]; then
				set_fan 2
			elif [ $minusTemp -lt $TEMP_ALARM ]; then
				if [ $DEBUG -gt 0 ]; then echo "Pas de changement"; fi
			else set_fan 4
			fi
			;;
			
		*)
			if [ $majorTemp -lt $TEMP_V1 ]; then
				set_fan 0
			elif [ $majorTemp -lt $TEMP_V2 ]; then
				set_fan 1
			elif [ $majorTemp -lt $TEMP_V3 ]; then
				set_fan 2
			elif [ $majorTemp -lt $TEMP_ALARM ]; then
				set_fan 3
			else	set_fan 4
			fi
			;;
	esac

	if [ $DEBUG -gt 0 ]; then
		echo "Prochaine mesure dans ${timer}s..."
	fi
	
	sleep $timer
done
exit 0
